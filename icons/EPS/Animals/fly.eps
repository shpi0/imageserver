%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.3 (Build 17D102) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 64 64
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 64 64
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
q
0 0 64 64 rc
14 0 0 42 25 8 cm
BI
/Width 42
/Height 126
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
cMn^Zs8L10jG2I+6cGZb`Lhq>_TM?.rVulBs3^ieS)DLG^Qp(TNZu&p,.`dY\rIuGNZu&p1;B-Ei69UK
eGgbLg;5&FNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&pLt]_qs4[K)rr<"Ef"3-;NZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rM*f]DgI_h>]A/rr$Z\Zm*)A,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`eNdBrfMrS@M0s##hl`?MmR,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNfVu8h>cF545]`".(kZd\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`d_]TM+En)46(s#XN2X<P69,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`e?c)fk'j8VEMkL^uiNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rO&Yf]3"os$uYWq)6'W,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p2o1pQqt]CSk5Rr%fY/Q@NZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&pJCqTus69PXnGDu0]ojSN
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
.D:o6qtTFUl2OJKiQWRXNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rN??c0>8ms%Po#TH^t-,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGN^UjZl2U,M;onCe,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rOl"j6Zg4s&3g`[3E2B,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`ePd^AHAn,HPXqXu>MOWqAs,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`d_]TMUXp@&%M
s&kcJb9FNX,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNg\hKn,MkV=[U0#,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p6cG\ds761s
iV)ab\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNoB^$o)J:\?_l`0,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rNTHdIR>.s'KEcZ6Hl?,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`eId'E6Bp&AV$rr+RbPp3f",.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`df^6SWqrq6<as(0CBj<D0q,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNm$nQ
p&F^bAWGQb,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&pNnhVHs7QD';9>[Z\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`e3aenb2q#>.!qtMGKO!;/q,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
N[25tnGE"Us7lV0[clEh\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNje0*q#C-hCPUW\
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rMR"_YF0+s(budXs1H;,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`eAc*$jAq#>+f_3lLYNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p2SkgVs82h9m/$E"\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`g$
qY'gdqu:ZTmGT8#NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rObsiVWZOs)?_l
s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]f
Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs4jXOs8)b7c%l>&5l\#Qs0"]f
Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`-4L\q,Js)>_`s0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Q
s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs1`+As8Dt@rr)l%7K9PVs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Q
s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]f
Y<`,k5l\#Qs0"]fY<`,k5l\)Xs8Murs8Dt@o&'JN5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]f
Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`,k5l\#Qs75(Hs8Dt@jM(Yt5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Q
s0"]fY<`,k5l\#Qs5^ons8Dt@gSk.U5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Q
s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]f
Y<`,k5l\#Qs4aLOs8Dt@e!0m95l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]f
Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs3m53s8Dt@b(0Mq5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Q
s2ools8Dt@_JT=V5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Q
s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs2&XP
s8Dt@\lo':5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]f
Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs12A4s8Dt@
Z:=kt5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0>,ns*aA4pEI2/
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNpli=IG"/W,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&pf^nEW_<g)(\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`fNm,3;ljjYKcNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rNfPe:!P;a<J3U,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNg&>@I=Kk_,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&pJCqSaGLa8K\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`eYe[g0Je$^I3NZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rLaY[XDl:Z6Hl?,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNbQkGI::F(,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p@Eu$(>0O#k\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`e<bc?.iaep>oNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rK\1VgV4YUE[:0,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGN_@EfI7(uG,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p6cG[G4MmR3\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`ds_OGs2^mH=WNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rJY`R!gR#PTm]!,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGN\.u0I3uUg,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p-G5Fgs04rkY<`,k5l\#Qs0"]fY<`,k5l\#Q
s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]f
Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fYsWs>ZqCA%5l\#Qs0"]fY<`,k5l\#Qs0"]f
Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,p8q$`J;#d^as0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Q
s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\8hIK-iZs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Q
s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]f
Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs1)3Zs1D\<Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]f
Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]f]O$$d^1@8I5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Q
s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`-%A:=KoCB(J&s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Q
s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]f
Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\Z8IK.6)s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]f
Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs28l)s2K9_Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Q
s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]f`clk2aaO2m5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Q
s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]f
Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`-0I=;.>K`A5@s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]f
Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l]&]IK.TMs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Q
s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs3HUOJCqR[\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`ebfY2cuhT6tQNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rN$3aaL5Oe0;Ja,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNiV9kIDP:.,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p_<g*.f^nGR\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`feoB^noqY)2FNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rQ7Up\t2:.D1ff\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGN[_W(rr;utG<a!9,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rK"mSc8Zgs*%MeW?Sp6,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`e8bGkL@rr71Zd^::1NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&pD:5iks8N%BK\=-b\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NeH*%rr;utGFRO7,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rN9<
bl7YAs*(j6fcn"f,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`fAkh5t8
rr72qo^!d5NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&pg%=Y1s8N%B
r;Q[D]TFDLNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rJ2OOo54Xrr;lqED4EK
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p9ZNt+s82h9FO[fE\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`eVe@>DUqu:Z,iQWRXNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rN??c27P;s)@8Js0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]f
Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`,k5l\#Qs6@l+s8)b7q="?e5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Q
s0"]fY<`-`n,*.Zs(]#@s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Q
s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,s;Y^:ds(]Mq
s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]f
Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`-,Fnl"2s(^&Ms0"]fY<`,k5l\#Qs0"]f
Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`-;Qh^UTs(^Z2s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Q
s0"]fY<`-L_"ds(s(_E$s0+iiY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Q
s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fYX8Bdo(`7Ws(&oZ
s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]f
Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs1i@As7H>%et)iE5l\#Qs0"]fY<`,k5l\#Qs0"]f
Y<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`->T(W-Us((NGs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k
5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs6\;.s7H>%rr)l(
9E21\s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Q
s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fZqLGurUp3\s'Efps0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Q
s0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]fY<`,k5l\#Qs0"]f
Y<`-0I.I=.s'MS^d3?/^,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`f1j3dGto)E(Up@'9;NZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&piV)d3s6otj6cGZA\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`e%`LlW!n,HOYi6*=UNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rN3:bO>K"s&nacp*dS9,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rJ2OOmW#=n,MbS;fC*l,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rL^W[I!q[s&7#,j!)'p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`fUmc3[6l2OIG`LnEdNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rK1tT]uL@s%T*Dbp'`Z,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuG
Nh54Sl2U#J:%8&T.D:lg\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY
\rIuGNZu&p,.`dY\rIuGN[_Z)nGE"Fs5s>OJCqR[\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNe#crk5XTD8+QQQ2Ske*\rIuGNZu&p,.`dY\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dn_3slkq<%_;s$<pQfHRne,.`dY
\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNj7d"j8\';4'g+4
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rL(@XPj-:s#]-2
mjPi2,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p.(k]"p$^i=h>]?n
gr:PLNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rMj,`ng[Ns#'ZPrG9lg
,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`dY\rLUS[/9k$h>c4//cPeMHIf\P\rIuG
NZu&p,.`dY\rIuGNZu&p,.`dY\rIuGNZu&p,.`e\f":q6s4%&nLt]]i\rIuGNZu&p,.`dY\rIuGNZu&p
,.`dY\rIuGNelE+eGmqr*Ll!21;B,!\rIuGNZu&p,.`dY\rIuGN\\A8S)DN<s3CW\rVul>n)T8X_F);7
6cG[Qg;;#$jSf,XcMrC
~> %APLeod
EI
Q
0.60000002 i
0.70588237 0.87450981 0.98431373 sc
q
36 34 m
36 35.656853 37.230293 37.546799 38.737488 38.216663 c
55.95895 45.870644 l
59.847614 47.598938 63 45.547935 63 41.304623 c
63 40.695377 l
63 36.445339 59.553005 32.744667 55.317066 32.430893 c
38.992634 31.221676 l
37.339848 31.099249 36 32.346516 36 34 c
36 34 l
h
W*
0 0 64 64 rc
31 51.483898 m
68 51.483898 l
68 26.213381 l
31 26.213381 l
h
f
Q
2 w
1 J
0.36862746 0.65490198 1 sc
q
0 0 64 64 rc
1 0 0 -1 36 46.483898 cm
0 12.4839 m
0 10.827045 1.2302939 8.9371023 2.7374895 8.2672377 c
19.95895 0.6132555 l
23.847614 -1.1150399 27 0.93596292 27 5.1792779 c
27 5.7885218 l
27 10.038562 23.553007 13.739233 19.317066 14.053006 c
2.9926338 15.262223 l
1.3398478 15.384652 0 14.137383 0 12.4839 c
0 12.4839 l
h
S
Q
0.70588237 0.87450981 0.98431373 sc
q
37.238827 26.660847 m
35.450073 27.952724 35.778038 28.827932 37.989246 28.613945 c
59.635601 26.519135 l
62.598278 26.232426 63.095764 24.535204 60.743313 22.725626 c
56.256687 19.274374 l
53.905785 17.465986 50.039421 17.415976 47.6427 19.146936 c
37.238827 26.660847 l
h
W*
0 0 64 64 rc
31.086866 33.646145 m
67.227913 33.646145 l
67.227913 12.882565 l
31.086866 12.882565 l
h
f
Q
0.36862746 0.65490198 1 sc
q
0 0 64 64 rc
1 0 0 -1 36.086864 28.646143 cm
1.1519626 1.9852968 m
-0.63679278 0.69341791 -0.30882841 -0.18178873 1.9023792 0.0321991 c
23.548737 2.127008 l
26.511412 2.4137185 27.0089 4.1109385 24.656448 5.920517 c
20.169821 9.371769 l
17.818918 11.180156 13.952554 11.230168 11.555837 9.4992056 c
1.1519626 1.9852968 l
h
S
Q
0.70588237 0.87450981 0.98431373 sc
q
29 34 m
29 35.656853 27.769707 37.546799 26.26251 38.216663 c
9.0410509 45.870644 l
5.1523857 47.598938 2 45.547935 2 41.304623 c
2 40.695377 l
2 36.445339 5.4469934 32.744667 9.6829329 32.430893 c
26.007366 31.221676 l
27.660152 31.099249 29 32.346516 29 34 c
29 34 l
h
W*
0 0 64 64 rc
-3 26.213381 m
34 26.213381 l
34 51.483898 l
-3 51.483898 l
h
f
Q
0.36862746 0.65490198 1 sc
q
0 0 64 64 rc
-1 0 0 -1 29 46.483898 cm
0 12.4839 m
0 10.827045 1.2302939 8.9371023 2.7374895 8.2672377 c
19.95895 0.6132555 l
23.847614 -1.1150399 27 0.93596292 27 5.1792779 c
27 5.7885218 l
27 10.038562 23.553007 13.739233 19.317066 14.053006 c
2.9926338 15.262223 l
1.3398478 15.384652 0 14.137383 0 12.4839 c
0 12.4839 l
h
S
Q
0.70588237 0.87450981 0.98431373 sc
q
27.075953 26.660847 m
28.864708 27.952724 28.536743 28.827932 26.325535 28.613945 c
4.6791773 26.519135 l
1.7165027 26.232426 1.2190142 24.535204 3.5714664 22.725626 c
8.058094 19.274374 l
10.408997 17.465986 14.275361 17.415976 16.672079 19.146936 c
27.075953 26.660847 l
h
W*
0 0 64 64 rc
-2.9131346 12.882565 m
33.227913 12.882565 l
33.227913 33.646145 l
-2.9131346 33.646145 l
h
f
Q
0.36862746 0.65490198 1 sc
q
0 0 64 64 rc
-1 0 0 -1 28.227915 28.646143 cm
1.1519626 1.9852968 m
-0.63679278 0.69341791 -0.30882841 -0.18178873 1.9023792 0.0321991 c
23.548737 2.127008 l
26.511412 2.4137185 27.0089 4.1109385 24.656448 5.920517 c
20.169821 9.371769 l
17.818918 11.180156 13.952554 11.230168 11.555837 9.4992056 c
1.1519626 1.9852968 l
h
S
1 w
0.59200001 0.59200001 0.59200001 sc
1 0 0 -1 26.991798 61.658916 cm
3.820189 6.2789278 m
3.820189 6.2789278 4.2975054 2.1166136 0 0 c
S
1 0 0 -1 33.162102 60.369209 cm
0.00038867723 5.5581841 m
0.00038867723 5.5581841 -0.09913861 2.3828492 2.8870947 0 c
S
Q
1 0.68627453 0.25098041 sc
q
32 44 m
35.313709 44 38 46.686291 38 50 c
38 53.313709 35.313709 56 32 56 c
28.686291 56 26 53.313709 26 50 c
26 46.686291 28.686291 44 32 44 c
h
W*
0 0 64 64 rc
21 61 m
43 61 l
43 39 l
21 39 l
h
f
Q
0.13333334 0.72941178 0.55686277 sc
q
29.623859 51.54557 m
30.427118 52.99469 29.418737 53.94598 27.96962 54.749241 c
26.520502 55.552498 25.179399 55.903545 24.376141 54.45443 c
23.572882 53.00531 24.581263 52.05402 26.03038 51.250759 c
27.479498 50.447502 28.820601 50.096455 29.623859 51.54557 c
h
W*
0 0 64 64 rc
16.609375 50.756138 m
23.396709 63.000816 l
37.390625 55.243862 l
30.603291 42.999184 l
h
f
Q
q
34.376141 51.54557 m
33.572884 52.99469 34.581264 53.94598 36.03038 54.749241 c
37.4795 55.552498 38.820599 55.903545 39.623859 54.45443 c
40.427116 53.00531 39.418736 52.05402 37.96962 51.250759 c
36.5205 50.447502 35.179401 50.096455 34.376141 51.54557 c
h
W*
0 0 64 64 rc
47.390625 50.756138 m
40.603291 63.000816 l
26.609375 55.243862 l
33.396709 42.999184 l
h
f
ep
end
%%Trailer
%%EOF
