%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.3 (Build 17D102) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 64 64
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 64 64
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
q
0 0 64 64 rc
36 0 0 36 15 20 cm
BI
/Width 108
/Height 108
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
JcG]K3r/^Rl1=r-lMnubs1$b^W6kR2a8^t0s*(mNB<;,GXT*LPs+nDhQcK-)d/UW/s2j7"f]rM$oDeXa
_#M+JM>pKCp]&"`s,FkpBW_;@VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg:XoFBss1d@hnFt0,^&O8qAENI_[+>8/]Dl6:s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg1W;hI]
s0UAWk47(&^&O](HiF'Fg["m=d/S9ss'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?DmgH
[K!5Qs4cl>ro!gis.o[Eq>C8seGjBhs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$#lebFs01#Qq>BFU^&P,4J,TBH^>/a*YQ%q,s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0V\K/;VuL)$s'DW'?Dmg@YlDGms8Dras1SH7s*r8Q
s)tgM?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?De_A
?Dmg0VuL)$s'DW'?Dmg0VuL)$s)tgMbiA3m^&PG=J(a,eK"M%hVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0V^DFMVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'K"M'9lLt7ks1//ZjmiA3_Z*r?s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$1B1[Ys'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmga
_Z/`fr;XJ1]`3J_df3^Ss'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DTas'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
@&a1-df9?\s2+ecq"t)Q_uF&@s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$5lY/gs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s,[?#s7lK-s2G"flh(4(\,Td4s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$6iUJjs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg:XT"6opTr39?O!J/Haj%@oYgdNs*r\ds(ee;?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dg$f?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?`3pO[JQ`?oZGnTkNM1-kQ#f5Zhn(,s(ee;f]pNWbQ!(-
h>^r`s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DT]
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg<XSn9rpUJZAhW*nikQ$nW_=h35
s'DW'@]BCCh9,cFs*t%Is.dj=?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?DfUZ?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?`=!R[eclCoZZ(W
kih9nkQ&"'d.(G?s'DW'?Dmg0VuNO:s8N#Es4%'upA4fG^].W<s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$.fWhQs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg]]_K(dnDE<lg?8Od(#S@aVuL)$s'DW'?Dmg0VuMUgs7Z<<s4@:#rr2qS^].W<s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$-i[MNs'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuP?+m*k/8kic`^ra)N&?Dmg0VuL)$s'DW'M80)irmq,$s*pfgs'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Df1N?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'M](jlYgVkSWOILqEIhVuL)$s'DW'?Dmg0VuL)$s.diis4[L&
^to#sVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
-i[MNs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuLS8rQsaIkienco3S?p?Dmg0VuL)$s'DW'
?Dmg0VuOQgg&Kn.J(X&d@]BB6VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0V^h^QVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuM.PqU"FIkig";
mTugk?Dmg0VuL)$s'DW'?Dmg0VuL5*s4HVls5<p,lh(3mY5_h+s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$/cT.Ts'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'NkY;8kTT0RioTE3W;g2%s'DW'?Dmg0VuL)$s'DW'?Dmg=Y5dh[huDa:J,&p@Haj#]
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0V_J-WVuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'T>pQNkksWdGdI9RVuL)$s'DW'?Dmg0
VuL)$s'DW'?DmgM\,Z7#irA'=IuqSJ?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0V_J-WVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'YKcXbkksWdg#;7ubk$=nqHp0#?Dmg0VuL)$s'DW'?Dmg0VuMjrirA0@J#q)u?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0V_e?ZVuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmh<eaLlKoB7(Ij6Nqpnq4IJ@&X*3VuL)$s'DW'
?Dmh)dcLMns*s/#s'Vi+?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Df^]?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?DmhM
h!EDOlKAo=jQa/"nVFgQ@]BB6VuL/(s5ie7s69Q5O2Cp'VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$2ZI*]s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s5E))d-0HP$K:+3\C'f)^%df0kl:#LJ(a,e?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0V`+Q]VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuLD1rlsZZkQU#.l/1b!m/QGPItG<4?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0V`aucVuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuLJ4rkHtOjQ>^Ukgekui8j2&rpTmU
s*r5Ps'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dg?o?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
AZG`k^A#@lnDr`rh!!2M!nl]-n,MtYJ,TBHG.%?VVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0Vc<\&VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg7WrA$mpV#)Gj6#UfkgJYuiT9A&rVlBfo)F3R
h#C]Ys'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DU/
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL;-rf4\d][QB1jlu3scfbG[iq2gAp&BO;r;UW;s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DU8s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL;-s,b"ikih:'kg/GrioTJ#qu69gp&BNGeGijQs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DU8s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'`7OGLkfi5lc//'bs7lVDrr<"8YQ%q,s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$C&_M;s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
NkY8[kfi5mh;di#pAapfJ(s;h?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VelB>VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL>.rbJY7D6EhGW;g2%s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'r&.hrO(s
kfN#ihWjq3s7lVDW6kQNVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$5Q>&fs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg^^%fb(meGujjlYgQh!MJpnX@AgK"1YiX8ZG's'DW'?Dmg0VuL)$s/jN9pZT`_!mfcoq#C-h
Is/7"?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
V`aucVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s+e5^kNM0m
kS34Cl,MBDR`"f;Yl.n+s'DW'GI.2@kfN#iioTJ#s82hGk48OYVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$4TA`cs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?DmhUi9T"Y$dRPpTuQ_DYl2f#mJ?%dkQ9r9q"t*gs*qE,
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dfg`
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuM7UqTS.*l/1Re
qWPr_!nZH$qu?QnItG<4?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0V`Fc`VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s.RI)_<Ao&!orG.qu?ZqJ+344?`=!2VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0V`aucVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'Xj$@Pkf2fh_q4AHp\k-ks*qf=s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dfpc?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s1-PH_<Ao&"IR("^YJefrr7J-_>di>s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DTcs'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuO]em_S,,kQGe,rJeYls8N%JB<;,>
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$4TA`c
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?DmhMh<_uAaliuS
g[/=Fs(AG3s*skBs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dg$f?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'f&,f0kfN#rU;un4VuL)$s7uTmJ*?M(?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0Va(2fVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?DmhLh!MrAalj+VZhn(,s'DW'kk"h(f]rKCVuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$5Q>&fs'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuOchm_S,2kRQ5&lX$Lh?Dmg0
VuPE7s*r,Ks'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dg$f?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'^=;Ygkfi6#Xj$?BVuL)$s'DW'aPm/K\CggfVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$5Q>&fs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuO0On\OG5kRN3Sq-L!!?Dmg0VuO9Zs*prms'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dg$f?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'VTJGGkg/H)b1c5jW;g2%
s'DW'?Dmh$ci8K]a8]JDs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DTfs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s-:Fo_<B>2'Z&AhA?,Z9VuL)$s'DW'?Dmgia8^XE^AhN;s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DTfs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s23IW_<BG5(Uh`]@As34VuL)$s'DW'?Dmg0
VuMOds*o4"s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dfpc?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s,+G`^?F55)QV'Q?Dmg0VuL)$s'DW'?Dmg0VuL)$s)tgMIqGe^?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0V`aucVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'ce\!&khPACl(,fd?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'Auu#^B<;,>VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$3WEE`s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
MnJhski(_Mk3(uk^\;'4s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s(AG5Is8=#?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0V`Fc`VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s3BEe]BJ>>-KXCSL:[1eVuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s*(mNIttc<?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0V`+Q]VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL_?rOD(PkU,3Jl<^Cg?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuMRes*pBUs'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Df^]?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmgg_=kD&jQIrRkNQ<Ns'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmgia8^Xfd/RFMs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DT]s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW']@68Zki(_M@B'95VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s/=<E
J%423?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
V`+Q]VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuPZ8lF?':kTaW<
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmh5g&HQCiW!5^s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DTZs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'[HQT5,A!nS?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuOlt
s*r\ds'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Df^]?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmh`k39D>iTMLr
WrHD's'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'f]rKdl1=p]VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$2ZI*]s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s1[%Q\EMo8,@RPN?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuQ#Qs*skBs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dfg`?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?DmgT\GG=M
l+?0?kU,?Ol!C:f?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuQSjs8N%JBW_;@VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$3WEE`s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s*hEQgZ%P5kiCqOe_f_"VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s(JP5s8N%JNPYX$VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$4TA`cs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'CT[QUf^?T>jQIf/g$W1Es'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'NPYSn
rr7J_h#C]Ys'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DTos'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s*D'LU;uoKg?n(el-8GQkT[Udn6W$m?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmh<h#79Ps*sP4s'M`)
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dg[#?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s(\\8NkY:mcLTE?m+1C]kT[+Pnm86o?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?`="op\k-hs*oX4s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dgm)?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuLP7rKY4mf\l)QkiCqLT>pP1VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuM@\qZ$HmJ$df,
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0Vd9=/
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg4WW/F)p"\Qljlkdh+-+&/?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmh1
f)#FDs*s2%s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dh32?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL;-rjgJHkih-l+R*XBrEcE%?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'k48BKq#>he[JsR2s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DU2s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg7WrCT,lg*ctkTA((m9Z^j
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'G.%)Eq#>iCd/RFMs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DU5s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuM4S
qWI),mc`it+/[0P?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmh&d.dS8s*rehs'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dh<5?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'WQOi#ki_.OICAuYVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuPN;p]($gJ,]KJ
D6NtGVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0Vdoa5
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?DmgN[JK=TlKBDKjQ^*Ns'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s)"t>rq?Bbs*q9&s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dh<5?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'r)/kND+"kj%@R\^BnQVuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuO!No`+UaJ,0$BD6NtGVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0Vdoa5VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?DmhM
h!FRplf]JUI'rfWVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg?YQ+Fro`+L^J%j_<?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VdTO2VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'^XV`Bkj@RU[*S8KVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuOKdnc/1[J,TBHG.%?V
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VdTO2VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'`n9_Lkj[d[hrO';Xo;Y)s'DW'?Dmg0VuL)$s'DW'?Dmg0VuLqJ
s8Dres6ou;biA_0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$?2n6/s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'c.hXUkk"!^jlbl[\G9I/s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s30Nks6Tc8K"M%hVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$>5qp,s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s4u`#n`]T.+-F>4?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?DmgT]BfL`s*r_es'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dgm)?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'CT[R'kkXEgkNM0!_t@?6
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'g$7o'l2Q6o_Z*r?s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DU&s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuM4SqX3SFkU#-I
l@c_D?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuMgpkl9oIJ*$5#@&a04VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0Vc<\&VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'Oh^YY
kUPf[d,"&.Yl%h*s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'@&a1fn`^#8s*q,us'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dg[#?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuNR6o^CuD]I21tA?,W8VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'XO?51j8XUj_uF&@s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DTus'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'\'aa=kQ^,1l(H&h?6lHK?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s,b.Xs5X-/q"t)<
\,Td4s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$:B+Xu
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s2s'`pui%"eaIL^r*H<$?6lHK?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuM+Qs7lKN
s5<p,lh(3mY5_h+s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$9E/=rs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuPQ3lMfuXf&,eL]D,^1s'DW'?Dmg0+fG?HVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuLP8s6K=7s5!^)f]rKGWW-;&s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$>Q8$-s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'A?,XdjQ`DXoOFp$?Dmg0VuL)$s'DW'?66$E?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'@]BC[lJ2Ens*qi?s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dgp*?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg5WrHY1ra)N&?Dmg0VuL)$s'DW'?Dmg0)lN^BVuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmh=h:_h[s*pfgs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dgg'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?5TU??Dmg0VuL)$s'DW'?Dmg0VuL)$s.diis4@:#
rVlhR^].W<s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
<W?C's'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL'?VuL)$s'DW'?Dmg0VuL)$s'DW'M80)irmq,!s*sb=s,"Mj?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dg^$?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'?G<s'DW'?Dmg0VuL)$s'DW'M80)aqU>Jls*t"Hs.dj=?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?DgU!?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL'9VuL)$s'DW'
?Dmg0VuNO:s8N#Es3(Fl^to$"WW-;&s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$8cN+ps'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL'3VuL)$s'DW'@]BCCh9,c=s*r\ds(ee;?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dg9m?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'?#0s'DW'CTd]i
lGrqDs*sA,s*M6T?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dg0j?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL'-VuM+Qs6K<qs2+ecq"t)Q_uF&@s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$5lY/gs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s,[?#s7lK-s1JA]XO@,VWW-;&s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$3r`Nas'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'Vi+XO@.K^&PYCJ*$5#O2Cp'VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0V_\9YVuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'O2CqYnbiF#s0M`Tg$8Th]Dl38s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$-N@DMs'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?DmgT]DpRLpA_i+XoEmoj8X;1s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DTAs'DW'?Dmg0VuL)$s'DW'?Dmg0VuLqJs3'Hls1SH4s*t"Hs1[:gD6NtGVuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?DeM;?Dmg0VuL)$s'DW'
D6NuRh#I?PmJjm"V#Pr?r;X"Ns)"t>?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DT/s)"t>Ygi^Kr9+*ns.97;rr<#Qli3p1s)tgM?Dmg0VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'
?Dmg0VuL)$s'DW'?Dmg0VuLqJs/=<Eg["n=i;^LjP5f(To)H)Js+7l_?`=!2VuL)$s'DW'?Dmg0VuL)$
s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'M`)
K"M&if)On'ec3>_M>pKCp]&"`s,FkpBW_;@VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg0
VuL)$s'DW'?Dmg0VuL)$s'DW'?Dmg:XoFBss1d@hnFt0,^&NZ`rVnqSr;Z!Ps4HW:aPm0/f`.kqs-Le+
LVEe3[Jsj?s(8A4G.%@*^AjP?s/43C\Cgi&iW%Qqs60(Sq>A&.^&NT
~> %APLeod
EI
Q
0.60000002 i
0.90994364 0.90994364 0.90994364 sc
q
22.071167 52.303642 m
26.284319 51.269684 l
26.336504 48.96833 l
26.336504 48.96833 25.037731 45.977276 23.479673 43.718468 c
22.134195 41.767845 17.078953 42.027714 15.43125 41.934277 c
16.367102 46.131771 18.76878 49.776596 22.071167 52.303642 c
h
W*
0 0 64 64 rc
10.43125 57.303642 m
31.336504 57.303642 l
31.336504 36.934277 l
10.43125 36.934277 l
h
f
Q
0.33725491 0.88627452 0.52941179 sc
q
32 18 m
32 6 l
34 6 l
34 18 l
32 18 l
h
W
0 0 64 64 rc
27 23 m
39 23 l
39 1 l
27 1 l
h
f
Q
0.74117649 0.45882353 0.45882353 sc
q
25 6 m
41 6 l
41 2 l
25 2 l
25 6 l
h
W*
0 0 64 64 rc
20 11 m
46 11 l
46 -3 l
20 -3 l
h
f
Q
0.33725491 0.88627452 0.52941179 sc
q
55 38 m
55 25.849735 45.150265 16 33 16 c
29.502752 16 26.1961 16.816029 23.260061 18.268066 c
24.146673 20.060808 l
26.875109 18.711441 29.884705 18 33 18 c
44.045696 18 53 26.954306 53 38 c
53 49.045696 44.045696 58 33 58 c
33 60 l
45.150265 60 55 50.150265 55 38 c
h
55 38 m
55 25.849735 45.150265 16 33 16 c
29.502752 16 26.1961 16.816029 23.260061 18.268066 c
24.146673 20.060808 l
26.875109 18.711441 29.884705 18 33 18 c
44.045696 18 53 26.954306 53 38 c
53 49.045696 44.045696 58 33 58 c
33 60 l
45.150265 60 55 50.150265 55 38 c
h
W
0 0 64 64 rc
18.260061 65 m
60 65 l
60 11 l
18.260061 11 l
h
f
Q
0.90994364 0.90994364 0.90994364 sc
q
25.282612 25.003664 m
25.890715 31.753481 l
21.005318 35.51239 l
21.005318 35.51239 20.723175 38.520485 24.269196 38.945572 c
27.815216 39.370655 29.999952 37.166279 29.999952 37.166279 c
29.999952 37.166279 31.407726 34.976711 30.882717 33.489273 c
30.357706 32.001831 28.999361 29.774401 28.999361 29.774401 c
28.999361 29.774401 28.891613 27.243917 27.970982 26.062216 c
27.050352 24.880516 25.282612 25.003664 25.282612 25.003664 c
h
W*
0 0 64 64 rc
16 44 m
36 44 l
36 20 l
16 20 l
h
f
ep
end
%%Trailer
%%EOF
