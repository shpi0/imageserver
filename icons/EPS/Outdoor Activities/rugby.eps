%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.3 (Build 17D102) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 64 64
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 64 64
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.50196081 0.82352942 0.35686275 sc
q
2 40 m
62 40 l
62 2 l
2 2 l
2 40 l
h
W*
0 0 64 64 rc
-3 45 m
67 45 l
67 -3 l
-3 -3 l
h
f
Q
q
0 0 64 64 rc
28 0 0 28 18 3 cm
BI
/Width 84
/Height 84
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
It5sOJC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dX,2KdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_3O
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.K
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+It5sO
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdX,2K
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7K>(G")JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_3OdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.K>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Ck%&L9Xg<S5kT3<KMo5P'U#kD,?R.:RY?[S4u_J9hh'V:75B`QXrsX
D,?F?;NcQ/N1*b#]ifm6>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+It5sOJC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdX,2KdT_7M
>Cb.+JC7YVa'P":A=f3#UNg.><`GS`9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pP
S4u_J9hh-P9q4pPRTWCKHr>lo<J&4oJC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.K>D14*RB:)"
Q#3sZEkQU<]leJ2F`kB?FhMp?\8Q;g@q2<8<h)lYS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P
9q4pPS4u_J9hh-P9q4pPS4u_I<)&=?<IiJ$JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+It5sOJC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb+*Oh"r"Q$[>[G]^WAFhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ/EcS9j@@^1iS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J
9hh-P9q4pPS4u_J9hh-P9q4pPS4u_DBMaDl=Feh(JC7YPdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>DU:*T;$#-Ir`5FFhMpEFhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ/EH/!b?CX_aS4u_J9hh-P9q4pPS4u_J9hh-P9q4pP
S4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS52n6[oe1/>Cb.+JC7YPdT_7M>Cb.+It5sOJC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_:L>F)L)Y)I83F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ-Df;OW>+A;]S4u_J9hh-P9q4pPS4u_J9hh-P
9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9pTHhJC.SOdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>ElO+[=N>2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ+D/H%K<h)lYS4u_J9hh-P9q4pPS4u_J
9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hgS7<IiM%JC7YPdT_7M>Cb.+It5sOJC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>Dp=*Y)I83F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]QA7q?='-r9q4pPS4u_J9hh-P9q4pP
S4u_J9hh-P9q4pPS4u_J9hh-P9q4pPRoE+6``do@>Cb.+JC7YPdT_3OdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>DC:+V4)25G'1K@FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?Y[qC99hh-P9q4pPS4u_J9hh-P
9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9oGTCJC7YPdT_7M>Cb.+It5sOJC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Ct4,
S>U#2H?6cBFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FgZ"#Skr7R9hh-P9q4pPS4u_J
9hh-P9q4pPS4u_J9hh-P9q4pPS4u_@Hr>LC>Cb.+JC7YPdT_3OdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+Ognl.Jo\PI
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`k35E1p61S4u_J9hh-P9q4pP
S4u_J9hh-P9q4pPS4u_J9hh-P9q#3[JC7YPdT_7M>Cb.+It5sOJC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YlW+N_dFhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ0F*"*W<h)lYS4u_J9hh-P
9q4pPS4u_J9hh-P9q4pPS4u_J9hg>T=b+q)JC7YPdT_3OdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YQcs*B7CV=k5]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?\oD__;Gs#Z9q4pPS4u_J
9hh-P9q4pPS4u_J9hh-P9q4pPN1*asdT_7M>Cb.+It5sOJC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_FJ?E]6)]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?Fgl4)SPDqM9hh-P9q4pP
S4u_J9hh-P9q4pPS4u_J9hge$;h3;#JC7YPdT_3OdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Dp@+[X`D3F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`k!'BUhdkS4u_J9hh-P
9q4pPS4u_J9hh-P9q4pPP]foSdT_7M>Cb.+It5sOJC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+PI4o4H$$`BFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ"@:>[#9q4pPS4u_J
9hh-P9q4pPS4u_J9hgpk;1R)!JC7YPdT_3OdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YmVJ!SbFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?Vcm8o9hh-P9q4pP
S4u_J9hh-P9q4pPQXs!DdT_7M>Cb.+It5sOJC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT`9>B>&G1]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`k<:Eh6*(S4u_J9hh-P
9q4pPS4u_J9hh$\:4UbsJC7YPdT_3OdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>EZC(]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ#@q2$'9q4pPS4u_J
9hh-P9q4pPRoE+4dT_7M>Cb.+It5sOJC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+Mnrc4H$$`BFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhDg<TMe[X9hh-P9q4pP
S4u_J9hh-P9n:VqJC7YPdT_3OdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YTb?_Q-EkQU<]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`js%B:M[jS4u_J9hh-P
9q4pPS4u_.crttJ>Cb.+It5sOJC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_:L
>d'*)]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]QA7i<E5P`9q4pPS4u_J
9hh'X:4UbsJC7YPdT_3OdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+V4)25
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FgPmuS4u_J9hh-P9q4pP
QXWa@dT_7M>Cb.+It5sOJC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YjWb/qeFhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`jK\<h)lYS4u_J9hgmi
:k6tuJC7YPdT_3OdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_dD@_?l,]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?Y@M169hh-P9q4pPP'U#V
dT_7M>Cb.+It5sOJC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Ck.+["EA3F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`k66E1BWsS4u_J9hg_';h3;#
JC7YPdT_3OdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YkWFihdFhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leIl<E5P`9q4pPNfd=ldT_7M
>Cb.+It5sOJC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_CK?+G?)]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?Ff]"[S4u_J9hgP9<IiM%JC7YP
dT_3OdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+URc/5F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ,D/Ge;9q4pPL9Xg1dT_7M>Cb.+
It5sOJC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YY`*^0$FM2g>]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?TMe[X:JHDb>(G%*JC7YPdT_3O
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>H3g&]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpE
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`jZh?']/"JC7YPdT_7M>Cb.+It5sO
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+O1Jf6F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8E
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?Y%(t'LJr`O>Cb.+JC7YPdT_3OdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPd9Eo2E4pC:]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`js%B8NHcJC7YPdT_7M>Cb.+It5sOJC7YP
dT_7M>Cb.+JC7YPdT_7M>EZC(]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?[;0Q1_chT=>Cb.+JC7YPdT_3OdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7Z$P&.gSFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`k!9D1L&=JC7YPdT_7M>Cb.+It5sOJC7YPdT_7M
>Cb.+JC7YPdT_CJ?+bB']leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?VitnHdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+JC7YP
dT_7M>Cb.+R]9u5F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`j+SAq8<6JC7YPdT_7M>Cb.+It5sOJC7YPdT_7M>Cb.+
JC7YPdT`u3E4pC:]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhDs@KZm\OdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+JC7YPdT_7M
>Dp@+]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leIrQ#)!!>Cb.+JC7YPdT_7M>Cb.+It5sOJC7YPdT_7M>Cb.+JC7Yr
T5)&^FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?Fcj4DJC7YPdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+JC7YPdT_7K>I]*%
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?[XW=Jd9D.L>Cb.+JC7YPdT_7M>Cb.+It5sOJC7YPdT_7M>Cb.+PI=u7F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`j=NBRnN8JC7YPdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+JC7YPdT`H;Bt\Y3]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?LrNbOdT_7M>Cb.+JC7YPdT_7M>Cb.+It5sOJC7YPdT_7M>Cb.+Y_mA4F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ#N,F0o>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+JC7YRcs45-FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FdB7CJC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+It5sOJC7YPdT_7M>E6F+]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
[=N=Kcs)%K>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+JC7YhV.72]FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`iqV
A:W*4JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+It5sOJC7YPdT_7M>FpRU]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?Ffp[@JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+JC7Yn@T:$`FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]lnOV_-hfA>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+It5sOJC7YPdT_@A>+A;]\8Q<!F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`jOLCOji;JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+Loa[J9hhd#A%d#-]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?Fh2m?L<<ePdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+It5sOJC7YPdT_U&<h)lYUfLO0F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leIfVe:P.>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+NL!P69hh-P9tG@c]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`k*DEe;YCJC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+It5sOJC7YPdT_cj<1HZWS4u_[@:?ilFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMs@OL\kOdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+Oag9!9hh-P9q>'U\oD`'F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leIfW+LS.>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+It5sOJC7YPdT_rY;OgHUS4u_J9hhWo?G1K(]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`jRKCOji;JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_3OdT_7M>Cb.+Q>'0c9hh-P9q4pPS4u_fDf<=3FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?Fg$[@J^@VOdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+It5sOJC7YPdT`)G:Rk-RS4u_J9hh-P9rD/u]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?[X`CPb$KVH>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_3OdT_7M>Cb.+R9WLW9hh-P9q4pPS4u_J9hi'5D7t(7]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ0H$"t]@"?[0JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+It5sOJC7YPdT`&L:n16SS4u_J9hh-P9q4pPUK1F.FEG3=FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?Fd'4CJC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_3OdT_7M>Cb.+Q>TQi9hh-P9q4pPS4u_J9hh-P9r_N+]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMpEFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?SYg%MdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
It5sOJC7YPdT_rZ;4L?TS4u_J9hh-P9q4pPS4u_J9hhj'A\E5/]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
FaJ8EF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leIg
VItG->Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_3O
dT_7M>Cb.+P($<!9hh-P9q4pPS4u_J9hh-P9q4pPS4u_cCMUV+FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpE
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ0H$#4W@t<!3
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+It5sO
JC7YPdT_ff;k-QVS4u_J9hh-P9q4pPS4u_J9hh-P9qG0X\8ZE#F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8E
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`k-DEf7b@JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_3OdT_7M
>Cb.+NfI&.9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh<\<4d3m]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?Fg$aBKZdYOdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+It5sOJC7YP
dT_R*=.DuZS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_Q<`ZeOEP6L;]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?V4)1Ncs2+L>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+
K#_&b9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPTMe[sD/Ht/FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]QSFdWb-e0>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+It5sOJC7YPdT_7M
>F8qsS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q>$SZ=mpbF`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ)K5ls`@Xum2JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+JC7Y`
L/XU:9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9s%i4]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ.HutjWAqA<6JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+It5sOJC7YPdT_7M>D]7Y
S4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hhNh>.\fq]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2
F`kB?FhMp?]leJ1GBBUNC4sf:JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+JC7YRb$(67
:7P$QS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_L:f+<)A%Zo*]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ2F`kB?FhMp?
]leJ2F`j^HD2H2<JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+It5sOJC7YPdT_7M>Cb.+N1F">
9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_N;Gsc4B=r>.]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ8EF`kB?FhMp?]leJ2F`k!E
E0%S>JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+JC7YPdT_7L>F&qu
S4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_P<E6D@C;"b4]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpEFhMp?]leJ1GBBgICm)29JC.SO
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+It5sOJC7YPdT_7M>Cb.+JC7YV\6,7s
:7P$QS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_R<`ZD7A@ZYu
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FaJ89LN&]^Aq\?5JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+JC7YPdT_7M>Cb.+L:C?O
BMY-m9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh?^
<NKV;[r#uqF`kB?FhMp?]leJ2F`kB?FhMp?]leJ-I<)'SC5]rU@"?[0JC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+It5sOJC7YPdT_7M>Cb.+JC7YPdT_7M>Cb+*
N1F"<<_f/Z9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J
9hh-P9qYB^WEif4@q2cVB=)MkXG(D_SS41p@Xug0JC7YPdX,2KdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M
>Ct"$M5OC9Ki=@L:Rk-RS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pPS4u_J9hh-P9q4pP
S4u_G>Y^K.;2giAL:(-7cWbqJ>Cb.+JC7YPdT_7M>Cb.K>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+It5sOJC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YRa'+=s=,r;?OG6\sI8Z8O;3bupQXs!]>Y^Yn:R5]kP]]ldIo;>c</m2CMP4(,XB1%l
>(G%*JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdX,2KdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.K>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+It5sOJC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdX,2KdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_3OdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YP
dT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.K>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M
>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+
JC7YPdT_7M>Cb.+JC7YPdT_7M>Cb.+J,
~> %APLeod
EI
1 J
1 j
0.61176473 0.3019608 0.3019608 sc
0.70710677 -0.70710677 -0.70710677 -0.70710677 36.22501 22.194878 cm
0.50666666 13.68 m
0.50666666 0.4677498 l
S
2 J
0 j
0.70710677 -0.70710677 -0.70710677 -0.70710677 33.000603 21.120075 cm
0 0.50666666 m
4.0533333 0.50666666 l
S
0.70710677 -0.70710677 -0.70710677 -0.70710677 31.567533 19.687006 cm
0 0.50666666 m
4.0533333 0.50666666 l
S
0.70710677 -0.70710677 -0.70710677 -0.70710677 30.134462 18.253937 cm
0 0.50666666 m
4.0533333 0.50666666 l
S
0.70710677 -0.70710677 -0.70710677 -0.70710677 28.701393 16.820866 cm
0 0.50666666 m
4.0533333 0.50666666 l
S
0.70710677 -0.70710677 -0.70710677 -0.70710677 27.268324 15.387796 cm
0 0.50666666 m
4.0533333 0.50666666 l
S
2 w
1 J
0.34901962 0.34901962 0.34901962 sc
1 0 0 -1 15 60 cm
34 0 m
34 23 l
0 23 l
0 0 l
0 0 l
S
2 J
1 0 0 -1 31 37 cm
1 0 m
1 6 l
S
ep
end
%%Trailer
%%EOF
