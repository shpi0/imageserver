%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.3 (Build 17D102) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 64 64
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 64 64
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
q
0 0 64 64 rc
40 0 0 39 15 3 cm
BI
/Width 120
/Height 117
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
JcG]K?i&@)j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP
2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)Y6]f&cq"s+14Ks'P8PM<$NOj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU
2)XGP2<6VPj>AgaM2C?oRK%j<B)ho,q;t%3j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XM`6iZuXkl7(N
JcB?^p:%Nl2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>Agg\$tT$RK%j<B)h13C?.60j>AgU2)XGP
2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2=#!lkl7(NKE#`bk2tb`2WQ_Qj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU
2)XGP2<?_Sr9!/-s-`n>s(h1nRH-4_j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU
2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgcR@3C@
RK&!@E;ok#9hj\+2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPkY4eOrr2?cRK&$AEVRSp
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU
2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPprCGCs-`nAs)IIQHK6q@j>AgU
2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP
2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2=>d:mf/^TM>qf!naY^&46/7Vj>AgU2)XGP
2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<?n]rpfOKs-`nDs*++6W8ofnj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU
2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgeW2T7dRK&-DGNrF<j>AgU2)XGP2<6VPj>AgU
2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP
2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XZ(>k.i^s,?u+qUa?[2)XGP2<6VPj>AgU2)XGP
2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>Agkf@TZpRK&6GIIN)Mj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU
2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPn;3"os-`nIs*sk?k!MMs2)XGP
2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgW6ULqTq>'dbRK&?J
J+g@\j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU
2$5`0\$u,3RK&?JJ*Uiaj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU
2)XGP2<6VPj>AgU2$5`%C23MCRK&HMJ,JHkjYf$X2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU
2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2$l/$2)XJR2Z2_"qYuu`P5g%&R@3+n2<6VPj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU
2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6V$2<6VPj>AgcR@3pORK&NOJ,]H2
9hj\+2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP
2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2%J\)
2<6VPj>AgY9hkZerr)kbs-<V6prCG92)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP
2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP%lNE*2<6VPj>AgU2)Y0La8Q%+s-<V6mWs3?2)XGP2<6VPj>AgU2)XGP
2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP%lNE*2<6VPj>AgU2)XfJHN!l3
s-Wh9rpfO?4$2L\2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU
2)XGP(,b/12<6VPj>AgU2)XGP2<?n]rpfOYRK&ZSJ+T\<j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU
2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP
2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2&8(12)XGP2<6VPj>AgU2)XGP2>!iGs-`nSs*s<=
>i[b"j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>@]1
j>AgU2)XGP2<6VPj>AgU2)XZ(>lU5lS,\!7f@T(@2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU
2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP
2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6V42<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2>R@*f:2f0s*sNp
M<$NOj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>@f4
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPn,\B&S,]&ZJ,/p&6UTol2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP
2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2&kU62<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<G$/
6iZuXT)YD^J+gC^j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU
2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP
2<6VPj>AgU2&nL72)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XFt2)Y*;\=W_ls*s?LC?.60j>AgU2)XGP
2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgG92"2)46/7Vj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>@o7j>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU">r(&C20@?U&TW?k2tb`2WQ_Qj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU
2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPf1AQIFEG<9DVINGj>AgU2)XGP
2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6V:2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU#;nC#
2E(Kqk+VgKs*s"6ZeIi7j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPgHn6@EcSj9FhMp?]lS8E:/9k-2<6VPj>AgU2)XGP2<6VPj>AgU
2)XGP2<6VPj>A#:j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XG"2)XGP2=d0'U&UnfJ,]GdL5*B`
FNdupi&Wp[2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VP
j>AgU2)X8S4htuS]leJ2F`kB?FhMp?]leJA>$BrE2WQ_Qj>AgU2)XGP2<6VPj>AgU2)XGP2'M$<2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU$8j^%2)XSl:&k4lV#R7jJ*ktD]leJ2F`kB?Fh_m7e4rd!
2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPiA`g7C21G)
FhMp?]leJ2F`kB?FhMp?]leJ;AnKs_46/7Vj>AgU2)XGP2<6VPj>AgU2'Op=2)XGP2<6VPj>AgU2)XGP
2<6VPj>AgU2)XGP2<6VPj9db%j>AgU2)Y0MaJAj3s*rOoUqLnn]leJ2F`kB?FhMp?`Fii=5saQh2<6VP
j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XDP2TK<;]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ6DJn2q6KC!]j>AgU2)XGP2<6VPj>A,=j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU
2)XGP2<5*%2<6VPj>Ag_H?uCeVuM8Dp@c7HH+e?C]leJ2F`kB?FhMp?]leJ2FEGc1=lD>"j>AgU2)XGP
2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)WT_>eP9&]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kE>F4EuZj>AgU2)XGP2<6V@2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<53(
2<6VPj>AgU4$3E4o;DVds*s(I`4^;9]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?^i+/A9MFM)2<6VPj>AgU
2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)Wc[;n[<r]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJB>$BrE2WQ_Qj>A5@j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj:*t(j#&^G
8P-j7C#d.MVuN[pJ'*h5]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FiJ!(h*4-b2)XGP2<6VP
j>AgU2)XGP2<6VPj>AgU2)WrW9"f=g]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FiJ!(i&Wp[2'k-@2)XGP2<6VPj>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj#&^F%80@3C21G)FhMp?
b)_U]s/Q*Ko&SlFF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB=F3[igi]&pY2)XGP
2<6VPj>AgU2)XGP2;:Jc^2e8-F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kN;-uI^*6KC!]j>AgU2)XGP2<6VPj>AgU2)XGP2<6VPj#/gG9ME<=CV::%FhMp?]leJ2F`kB?
Fn4VSWrK+!J(_$/]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?Fhqp3f1AQp
2)XGP2<6VPj>AgO4[$T!DnU:9]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2FXVCHF*#l+:#n/hj>AgU2)XGP2<6VPj>AgT2E'&[:;Ug`]leJ2F`kA/F`kB?FhMp?]leJ2
F`lB@YH%W)s*t"Eqndi4]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ<@q4@Z53+RYiAip8CMUV+FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]lbiJ]leJ2F`kB?Fj4&lj#/gV2)XGP2<$MPdn`cUD/Ht/FhMp?]leJ2F`kA2F`kB?FhMp?
]leJ2F`kQNJ,T9AXoGO'J*>5)]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhVp<crF)cA7WArFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2FXqUJF`kB?FhMp?]leJ;AS'a]4OR)(^i"&'F`kB?FhMp?]leJ2F`kB?FhJH2
FhMp?]leJ2F`kB?FhMp?kg.SWs/l<Nc^L<9F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?.s8OJFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]b>O2]leJ2F`kB?FhMp?]leJDR[UAYYlB4Imd@f4G.i$@]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMoMFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kA5F`kB?FhMp?]leJ2F`kB?FhW$Bp[7IRs02NQhR^;3F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?/p4jMFhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2(3Oc5F`kB?FhMp?]leJ2F`kB?Fl'^@YlD$/J,]GdL5*Ba
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FYLLOFhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kA8F`kB?FhMp?]leJ2F`kB?FhMp?
`J0-Irr08(Zi>OBg=j5_FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMoPFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhJZ8
FhMp?]leJ2F`kB?FhMp?]leJ2F`m**g9^gcs*rOoUqLnn]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]lc&P]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]bts8]leJ2F`kB?FhMp?]leJ2F`kB?Fk!4_Zi@K6J,As5^Nk+<F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FYn6SF`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kA;F`kB?FhMp?]leJ2F`kB?FhMp?]leJ4
H$T;\p9t"0s*s(J`P$D:]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]lc/S]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
*-HD;F`kB?FhMp?]leJ2F`kB?FhMp?]leJX`Po:c[f:j"O,ptsFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMoSFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]c;0;]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?b)_Uls1//ZoAnuG
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?2g)fV
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]cVB>]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJhjQ*lO\c704YHPW^FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMoVFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2+*D_>F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`lB@YIX\Gs*t"Eqndi4
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]lcAY]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhJuAFhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?_LI(6qtn&+]`3KFcd0:IFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMoYFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kAAF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?kg.Sf
s1JA]c^L<9F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?3d&,YFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
,'A%AF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FjHMF]`5bHJ+rF#^34\5F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FZjl\F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2-$=@DF`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhW$Bp[@Rcs1eS`hR^;3F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?4a"G\FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kADF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJS]"5ZV_>f#a
rl0\I]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leH^
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
.!9[GF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?`eK6Jrr0e7_Z,,Qg=j5_FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMo_FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]dS#G]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?mFp:2s2+ece>9"TF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?5]sb_FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhK2GFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?Fk!7a_Z.UTJ,As5^Nk+<F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F[L;bF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhK;JFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?Fh`3I
qtBa&s2G"fj2K!NF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?6Zp(bFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]dn5J]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJX`Pogr`W(G1
O,ptsFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMob
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2.s6!JF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kifO2_.?s*sY$jLo\Y]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]lcee]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhKDM
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJhjQ+D^aT$bCYHPW^FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMoeFhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kAMF`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?frqU#s3(FlrVQK/It,.SFhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?8Th^hFhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kAPF`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?_LI(6qtnS:bQ!(Ucd0:IFhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMohFhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhKMP
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`looccc@3s*r@`R_<id]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]lcnh]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]eOYP]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FjHMFbQ#lfJ+rF#^34\5
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F\HqkF`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kASF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ3G'<WKn':sY
s*rn:]"N6/]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]ld"k]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ21j*rSF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJS]"62ed/SUprl0\I]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leHm]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kAVF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`k]YLB%8PdJqVoJ*u%E]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F\d.nF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhK_VFhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?mb6CBs3^jre>9"TF`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?:Na?nFhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]f1(V]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJIV5;T>eGk$qp@c7HH+e?C
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMoqFhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kAYF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
Fh`3IqtBa5s4%'uj2K!NF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?;K]ZqFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ23d#SYF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FlUH[eGn%uJ'*h5]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F]*@qF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]fL:Y]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kifO4=3]s*sY$jLo\Y]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]ld=t]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]fgL\]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?Fn=\TfDjJ&J(_$/]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F]ERtF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ24`tn\F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?frqU2s4[L&rVQK/It,.SFhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?=EV<"FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhL%_FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kQNJ,T9AgAfn,J*>5)]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F]`e"F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kA_F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`looceAEQs*r@`R_<id]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]ldG"]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ25]q4_F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJDR[Vt1h>`!!n*du6G.i$@]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp%FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ26ZmObF`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ3G'<WKn(n$"s*rn:]"N6/]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]ldP%]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kAbF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?Fl'^@h>cC4J,]GeL5*BaFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?F^;\'FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ27Wije
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`k]Y
LB%8Pi;_a8J*u%E]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F^B4(F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]gd-e]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`m-+g>N"hs*rOpV7h"o]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]ldY(]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhL7eFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJIV5<,Mj8XW+p@c7HH+e?C]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp+FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhL@hFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ4H$T;\p>c25s*s+K`P$D:]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]ldb+]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]h*?h]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
Fl^N\j8\0>J'*h5]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F^]F+F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ28Tf0hF`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?b)_VDs5s?2oB#)I
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?A9GS.
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhLIkFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?Fn=_Vk5XTDJ(_$/]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F_#X.F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kAkF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`lB@YNGlLs*t%Gr5*r5]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]ldt1]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kAnF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kQNJ,]BDl2U#JJ*>5)]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F_>j1F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhLRnFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?kg.T>s69Q5c^L<9F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?B6Cn1FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]h`cn]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJDR[WL@m/MS0n*du6G.i$@]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp4FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kAqF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhW$Bp[@S;s6Tc8hR^;3F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?C3@44FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2;K[,qF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?Fl'^@m/QMRJ,]GeL5*BaFhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?F_na6FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kAtF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?`eK6Jrr2Bdn,In*
g=j5_FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp7
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhLdtFhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`m-+g@,(1s*rOpV7h"o]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]le17]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]iB2t]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?Fk!7an,MtYJ,As5^Nk+<F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`;K:F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB"F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ4H$T;\p@A7Ss*s+K`P$D:]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]le::]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2=ESc"F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJY`PqEJo)F3^OH@.uFhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp:FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]i]E"]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
b)h_Us7QDAoB#)IF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?F*50=FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]j#W%
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJhjlQ18p&BNpYctf`FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp=FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2>BP)%F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`lBAYkA%ks*t%Gr5*r5]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leL@]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhM+(FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?_LI(7r;??iq#>j.d*TIKFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp@FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB(F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?l-RfPs7lVDc^L<9F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?G'1K@FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2??LD(F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FjHMFq#C6kJ+rF#^34\5F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2Fa8,CF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2@<H_+F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhW$Bp[@SJs82hGhR^;3F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?H$-fCFhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB+F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJS]"7e=qu;/cL5*BaFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMpCFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhM4+FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`k]YLAV#Ms*sIjg:_WO]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]le^F]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2A9E%.F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJcg=lQ+rr7JtV5:kJFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMpFFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]ju8.]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
e>9#@s*sq>p:klu]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]legI]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB1F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kHEH2I=/J)nSf]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2FanPIF`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMF1FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?jMf)fb)h^uF`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?Is&GIFhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2
F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]k;J1]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?
FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?]leJ2F`kB?FhMp?
]leJ?OH=t
~> %APLeod
EI
2 w
2 J
0.60000002 i
0.61176473 0.3019608 0.3019608 sc
1 0 0 -1 3 4 cm
0 1 m
59.008472 1 l
S
Q
0.60000002 i
0.89411765 0.20784314 0.20784314 sc
q
30.386698 44.955051 m
30.386698 44.955051 32.098831 49.006599 27.762211 52.54232 c
23.425591 56.078041 30.239401 59.629444 32.497044 56.64035 c
32.497044 56.64035 35.226261 62.101589 38.126305 59.917316 c
41.733154 55.062073 l
41.733154 55.062073 45.273354 61.919567 48.060822 59.396454 c
48.060822 59.396454 50.321262 53.166237 44.182899 50.328362 c
38.044533 47.49049 38.602924 44.959534 38.602924 44.959534 c
30.386698 44.955051 l
h
W*
0 0 64 64 rc
21.348269 65.433006 m
53.467442 65.433006 l
53.467442 39.955051 l
21.348269 39.955051 l
h
f
Q
0.61176473 0.3019608 0.3019608 sc
q
16.444277 33 m
6 3.8374238 l
31 3.8374238 l
21.115236 29.142418 l
16.444277 33 l
h
W*
0 0 64 64 rc
1 -1.1625761 m
36 -1.1625761 l
36 38 l
1 38 l
h
f
Q
q
50.564491 23 m
57.427368 3.8374238 l
41 3.8374238 l
47.495228 20.465202 l
50.564491 23 l
h
W*
0 0 64 64 rc
36 28 m
62.427368 28 l
62.427368 -1.1625761 l
36 -1.1625761 l
h
f
ep
end
%%Trailer
%%EOF
